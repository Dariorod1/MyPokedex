{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dario\\\\Desktop\\\\PI-Pokemon-FT12-master\\\\PI-Pokemon-FT12-master\\\\client\\\\src\\\\components\\\\Creation\\\\Creation.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addPokemons, GetTypes } from \"../../actions/index\";\nimport '../Creation/Creation.css';\nimport axios from 'axios';\nimport { FORMS, POKEMON_URL } from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Validate = data => {\n  let errors = {};\n  let reg = /^\\d+$/;\n\n  if (!data.name) {\n    errors.name = 'Name is required';\n  }\n\n  if (!data.hp || data.hp.search(reg) === -1) {\n    errors.hp = 'HP is required and it must be a number';\n  }\n\n  if (!data.attack || data.attack.search(reg) === -1) {\n    errors.attack = 'Attack is required and it must be a number';\n  }\n\n  if (!data.defense || data.defense.search(reg) === -1) {\n    errors.defense = 'Defense is required and it must be a number';\n  }\n\n  if (!data.speed || data.speed.search(reg) === -1) {\n    errors.speed = 'Speed is required and it must be a number';\n  }\n\n  if (!data.height || data.height.search(reg) === -1) {\n    errors.height = 'Height is required and it must be a number';\n  }\n\n  if (!data.weight || data.weight.search(reg) === -1) {\n    errors.weight = 'Weight is required and it must be a number';\n  }\n\n  return errors;\n};\n\n_c = Validate;\nexport function Creation({\n  pokemonTypes,\n  GetTypes,\n  addPokemons\n}) {\n  _s();\n\n  const [Data, setData] = useState({\n    name: '',\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    height: '',\n    weight: '',\n    type: [],\n    sprite: \"\"\n  });\n  const [Types, setTypes] = useState([]);\n  const [Errors, setErrors] = useState({});\n  const [Alert, setAlert] = useState({\n    errors: false,\n    create: false\n  });\n  useEffect(() => {\n    GetTypes();\n  }, [GetTypes]);\n  useEffect(() => {\n    setErrors(Validate(Data));\n    console.log(\"errors\", Errors);\n  }, [Data]);\n  useEffect(() => {\n    if (!Object.keys(Errors).length) {\n      setAlert({ ...Alert,\n        errors: false\n      });\n      console.log(\"alert\", Alert);\n    }\n  }, [Errors]);\n  useEffect(() => {\n    if (Types.length) {\n      let total = [];\n      pokemonTypes.map((t, i) => {\n        if (Types.includes(t) === true) {\n          total.push(i + 1);\n        }\n      });\n      setData({ ...Data,\n        type: Types\n      });\n    }\n  }, [Types]);\n\n  const handleSubmit = async e => {\n    console.log(\"Esto es types: \" + Types);\n    e.preventDefault();\n\n    try {\n      await axios.post('http://localhost:3002/pokemons', Data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = e => {\n    setData({ ...Data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleTypes = e => {\n    if (Types.length < 2) {\n      if (!Types.includes(e.target.value)) {\n        setTypes([...Types, e.target.value]);\n      }\n    } else setTypes([e.target.value]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div_g\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-create\",\n          children: \"Create a Pokemon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 6\n      }, this), FORMS && FORMS.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div_f\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div_label\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: [el.label, \":\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 10\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          name: el.name,\n          type: \"text\",\n          autoComplete: \"off\",\n          onChange: e => handleChange(e)\n        }, el.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 8\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div_types\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleTypes(e),\n          children: pokemonTypes && pokemonTypes.map((t, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i + 1,\n            children: t\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 10\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div_type_container\",\n          children: [\"\\uD83E\\uDDECTipos\", Types && Types.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div_type\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              children: el\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 11\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 10\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div_submit\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_submit\",\n          type: \"submit\",\n          children: \"Create a Pokemon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Creation, \"6X22HpZRnrHTte+kXIb8gDMDI14=\");\n\n_c2 = Creation;\n;\n\nconst mapStateToProps = state => {\n  return {\n    pokemonTypes: state.types\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPokemons: pokemon => dispatch(addPokemons(pokemon)),\n    GetTypes: () => dispatch(GetTypes())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Creation);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Validate\");\n$RefreshReg$(_c2, \"Creation\");","map":{"version":3,"sources":["C:/Users/dario/Desktop/PI-Pokemon-FT12-master/PI-Pokemon-FT12-master/client/src/components/Creation/Creation.jsx"],"names":["React","Fragment","useEffect","useState","connect","addPokemons","GetTypes","axios","FORMS","POKEMON_URL","Validate","data","errors","reg","name","hp","search","attack","defense","speed","height","weight","Creation","pokemonTypes","Data","setData","type","sprite","Types","setTypes","Errors","setErrors","Alert","setAlert","create","console","log","Object","keys","length","total","map","t","i","includes","push","handleSubmit","e","preventDefault","post","err","handleChange","target","value","handleTypes","el","label","mapStateToProps","state","types","mapDispatchToProps","dispatch","pokemon"],"mappings":"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","sourcesContent":["import React, { Fragment , useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPokemons,GetTypes } from \"../../actions/index\";\r\nimport '../Creation/Creation.css'\r\nimport axios from 'axios'\r\nimport {FORMS,POKEMON_URL} from '../../utils/constants'\r\nconst Validate = (data) => {\r\n\tlet errors = {};\r\n\tlet reg = /^\\d+$/;\r\n\tif (!data.name) {\r\n\t\terrors.name = 'Name is required';\r\n\t}\r\n\tif (!data.hp || data.hp.search(reg) === -1) {\r\n\t\terrors.hp = 'HP is required and it must be a number';\r\n\t}\r\n\tif (!data.attack || data.attack.search(reg) === -1) {\r\n\t\terrors.attack = 'Attack is required and it must be a number';\r\n\t}\r\n\tif (!data.defense || data.defense.search(reg) === -1) {\r\n\t\terrors.defense = 'Defense is required and it must be a number';\r\n\t}\r\n\tif (!data.speed || data.speed.search(reg) === -1) {\r\n\t\terrors.speed = 'Speed is required and it must be a number';\r\n\t}\r\n\tif (!data.height || data.height.search(reg) === -1) {\r\n\t\terrors.height = 'Height is required and it must be a number';\r\n\t}\r\n\tif (!data.weight || data.weight.search(reg) === -1) {\r\n\t\terrors.weight = 'Weight is required and it must be a number';\r\n\t}\r\n\treturn errors;\r\n};\r\n\r\nexport function Creation({pokemonTypes, GetTypes,addPokemons}) {\r\n\tconst [Data, setData] = useState({\r\n\t\t\tname: '',\r\n\t\t\thp: '',\r\n\t\t\tattack: '',\r\n\t\t\tdefense: '',\r\n\t\t\tspeed: '',\r\n\t\t\theight: '',\r\n\t\t\tweight: '',\r\n\t\t\ttype: [],\r\n\t\t\tsprite: \"\",\r\n\t});\r\n\tconst [Types, setTypes] = useState([]);\r\n\tconst [Errors, setErrors] = useState({});\r\n\tconst [Alert, setAlert] = useState({ errors: false, create: false });\r\n\r\n\tuseEffect(() => {\r\n\t\t\tGetTypes();\r\n\t}, [GetTypes]);\r\n\tuseEffect(() => {\r\n\t\t\tsetErrors(Validate(Data));\r\n\t\t\tconsole.log(\"errors\",Errors)\r\n\t}, [Data]);\r\n\tuseEffect(() => {\r\n\t\t\tif (!Object.keys(Errors).length) {\r\n\t\t\tsetAlert({...Alert, errors: false });\r\n\t\t\tconsole.log(\"alert\",Alert)\r\n\t\t}\r\n\t}, [Errors]);\r\n  \r\n\tuseEffect(() => {\r\n\t\tif (Types.length) {\r\n\t\tlet total = []\r\n\t\tpokemonTypes.map((t,i) => {\r\n\t\t\tif(Types.includes(t) === true){\r\n\t\t\ttotal.push(i+1)\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t\tsetData({...Data, type: Types});\r\n\t\t}\r\n\t}, [Types]);\r\n\tconst handleSubmit = async (e) => {\r\n\t\t\r\n\t\tconsole.log(\"Esto es types: \" + Types)\r\n\t\t\te.preventDefault();\r\n\t\t\ttry {\r\n\t\t\t\tawait axios.post('http://localhost:3002/pokemons', Data);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t};\r\n    const handleChange = (e) => {\r\n\t\tsetData({...Data, [e.target.name]: e.target.value});\r\n\t};\r\n    const handleTypes = (e) => {\r\n\t\tif (Types.length < 2) {\r\n\t\t\tif (!Types.includes(e.target.value)) {\r\n\t\t\t\tsetTypes([...Types, e.target.value]);\r\n\t\t\t}\r\n\t\t} else setTypes([e.target.value]);\r\n\t};\r\n  return(\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n\t\t\t\t<div className='div_g'>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h1 className='title-create'>Create a Pokemon</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{FORMS &&\r\n\t\t\t\t\t\tFORMS.map((el, i) => (\r\n\t\t\t\t\t\t\t<div key={i} className='div_f'>\r\n\t\t\t\t\t\t\t\t<div key={i} className='div_label'>\r\n\t\t\t\t\t\t\t\t\t<label key={i} className='label'>\r\n\t\t\t\t\t\t\t\t\t\t{el.label}:\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName='input'\r\n\t\t\t\t\t\t\t\t\tkey={el.name}\r\n\t\t\t\t\t\t\t\t\tname={el.name}\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n            <div className='div_types'>\r\n\t\t\t\t\t\t<select onChange={(e) => handleTypes(e)}>\r\n\t\t\t\t\t\t\t{pokemonTypes &&\r\n\t\t\t\t\t\t\t\tpokemonTypes.map((t, i) => (\r\n\t\t\t\t\t\t\t\t\t<option key={i} value={i+1}>\r\n\t\t\t\t\t\t\t\t\t\t{t}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<div className='div_type_container'>\r\n            🧬Tipos\r\n\t\t\t\t\t\t\t{Types &&\r\n\t\t\t\t\t\t\t\tTypes.map((el, i) => (\r\n\t\t\t\t\t\t\t\t\t<div key={i} className='div_type'>\r\n\t\t\t\t\t\t\t\t\t\t<label className='label'>{el}</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='div_submit'>\r\n\t\t\t\t\t\t<button className='btn_submit' type='submit' >\r\n\t\t\t\t\t\t\tCreate a Pokemon\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n  )\r\n\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    pokemonTypes: state.types,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPokemons: (pokemon) => dispatch(addPokemons(pokemon)),\r\n    GetTypes: () => dispatch(GetTypes())\r\n}}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Creation);\r\n"]},"metadata":{},"sourceType":"module"}
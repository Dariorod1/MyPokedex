{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dario\\\\Desktop\\\\PI-Pokemon-FT12-master\\\\PI-Pokemon-FT12-master\\\\client\\\\src\\\\components\\\\Creation\\\\Creation.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addPokemons, GetTypes } from \"../../actions/index\";\nimport '../Creation/Creation.css';\nimport axios from 'axios';\nimport { FORMS, SPRITES, SPRITE_DEFAULT, POKEMON_URL } from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Creation({\n  pokemonTypes,\n  GetTypes,\n  addPokemons\n}) {\n  _s();\n\n  const [Data, setData] = useState({\n    name: '',\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    height: '',\n    weight: '',\n    type: [],\n    sprite: \"\"\n  });\n  const [Types, setTypes] = useState([]);\n  useEffect(() => {\n    GetTypes();\n  }, [GetTypes]);\n  useEffect(() => {\n    if (Types.length) {\n      let total = [];\n      pokemonTypes.map((t, i) => {\n        if (Types.includes(t) === true) {\n          total.push(i + 1);\n        }\n      });\n      setData({ ...Data,\n        type: Types\n      });\n    }\n  }, [Types]);\n\n  const handleSubmit = async e => {\n    console.log(\"Esto es types: \" + Types);\n    e.preventDefault();\n\n    try {\n      await axios.post(POKEMON_URL, Data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = e => {\n    setData({ ...Data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleTypes = e => {\n    if (Types.length < 2) {\n      if (!Types.includes(e.target.value)) {\n        setTypes([...Types, e.target.value]);\n      }\n    } else setTypes([e.target.value]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div_g\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-create\",\n          children: \" Create a Pokemon \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), \" \", FORMS && FORMS.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div_f\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div_label\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: [\" \", el.label, \":\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), \" \"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          name: el.name,\n          type: \"text\",\n          autoComplete: \"off\",\n          onChange: e => handleChange(e)\n        }, el.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 27\n        }, this), \" \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 40\n      }, this)), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div_types\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleTypes(e),\n          children: [\" \", pokemonTypes && pokemonTypes.map((t, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i + 1,\n            children: [\" \", t, \" \"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 42\n          }, this)), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div_type_container\",\n          children: [\" \\uD83E\\uDDECTipos \", Types && Types.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div_type\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              children: [\" \", el, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this), \" \"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 40\n          }, this)), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 18\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div_submit\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_submit\",\n          type: \"submit\",\n          children: \"Create a Pokemon \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 14\n  }, this); //======0000=======000000===============/////////////==============\n  //   const [pokemon, setPokemon] = useState({\n  //     name: \"\",\n  //     hp: \"\",\n  //     attack: \"\",\n  //     defense: \"\",\n  //     speed: \"\",\n  //     height: \"\",\n  //     weight: \"\",\n  //     type:[3],\n  //     sprite: \"\"\n  //   });\n  //   const [Types, setTypes] = useState([]);\n  //   const [pokemonS, setPokemonS] = useState({});\n  //   const [show, setShow] = useState(false);\n  //   useEffect(() => {\n  //       GetTypes()    \n  //       console.log(pokemon.type)    \n  //   },[GetTypes])\n  //   useEffect(() => {\n  //       if (Types.length) {\n  //         let total = pokemonTypes.reduce((acc, el) => {\n  //           if (Types.includes(el.name) === true) {\n  //             acc.push(el.id);\n  //           }\n  //           return acc;\n  //         }, []);\n  //         setPokemon({...pokemon, type: total});\n  //       }\n  //   }, [Types]);\n  //   const handleChange = (e) => {\n  //     setPokemon({\n  //       ...pokemon,\n  //       [e.target.name]: e.target.value,\n  //     });\n  //   };\n  //   const handlesubmit = async (e) => {\n  //     e.preventDefault();\n  //     console.log(\"body\"+pokemon)\n  //     //addPokemons(pokemon);\n  //     try {\n  //       await axios.post('http://localhost:3002/pokemons', pokemon)\n  //         .then(res => {\n  //           console.log(res)\n  //           console.log(res.data)\n  //         })\n  //     } catch (err) {\n  //       console.log(\"error del post\"+err);\n  //     }\n  //     setShow(true);\n  //     setPokemonS(pokemon);\n  //     setPokemon({\n  //       name: \"\",\n  //       hp: \"\",\n  //       attack: \"\",\n  //       defense: \"\",\n  //       speed: \"\",\n  //       height: \"\",\n  //       weight: \"\",\n  //       type:[],\n  //       sprite: \"\"\n  //     });\n  //   };\n  //   const handleTypes = (e) => {\n  // \t\tif (Types.length < 2) {\n  // \t\t\tif (!Types.includes(e.target.value)) {\n  // \t\t\t\tsetTypes([...Types, e.target.value]);\n  // \t\t\t}\n  // \t\t} else setTypes([e.target.value]);\n  // \t};\n  //   return (\n  //     <div className={style.container}>\n  //       <div className={style.subcontainerform}>\n  //         <form className={style.formcreate} onSubmit={handlesubmit}>\n  //             <label>Name: </label>\n  //             <input className={style.input} name=\"name\" value={pokemon.name} onChange={handleChange} />\n  //             <br/>\n  //             <label>HP:</label>\n  //             <input\n  //             className={style.input}\n  //               name=\"hp\"\n  //               value={pokemon.health}\n  //               onChange={handleChange}\n  //             />\n  //          <br/>\n  //             <label>Attack: </label>\n  //             <input\n  //             className={style.input}\n  //               name=\"attack\"\n  //               value={pokemon.attack}\n  //               onChange={handleChange}\n  //             />\n  //           <br/>\n  //             <label>Defense:</label>\n  //             <input\n  //             className={style.input}\n  //               name=\"defense\"\n  //               value={pokemon.defense}\n  //               onChange={handleChange}\n  //             />\n  //         <br/>\n  //             <label>Speed:</label>\n  //             <input className={style.input} name=\"speed\" value={pokemon.speed} onChange={handleChange} />\n  //             <br/>\n  //             <label>Height:</label>\n  //             <input\n  //             className={style.input}\n  //               name=\"height\"\n  //               value={pokemon.height}\n  //               onChange={handleChange}\n  //             />\n  //       <br/>\n  //             <label>Weight: </label>\n  //             <input\n  //             className={style.input}\n  //               name=\"weight\"\n  //               value={pokemon.weight}\n  //               onChange={handleChange}\n  //             />\n  //        <br/>\n  //             <label>Sprite:</label>\n  //             <input \n  //               className={style.input}\n  //               name=\"sprite\"\n  //               value={pokemon.sprite}\n  //               onChange={handleChange}\n  //             />\n  //           <select onChange={(e) => handleTypes(e)}>\n  // \t\t\t\t\t\t\t{pokemonTypes &&\n  // \t\t\t\t\t\t\t\tpokemonTypes.map((t, i) => (\n  // \t\t\t\t\t\t\t\t\t<option key={i} value={t}>\n  // \t\t\t\t\t\t\t\t\t\t{i+1}\n  // \t\t\t\t\t\t\t\t\t</option>\n  // \t\t\t\t\t\t\t\t))}\n  // \t\t\t\t\t\t</select>\n  //           <button className={style.button} type=\"submit\">enviar</button>\n  //         </form>\n  //       </div>\n  //       <div>\n  //         {show ? (\n  //           <div className={style.subcontainerform2}>\n  //             <div>\n  //               <h4>\n  //                 CREADO #{pokemonS.id} {pokemonS.name}\n  //               </h4>\n  //               <img\n  //                 src=\"https://i.pinimg.com/originals/76/ef/60/76ef60010a9ac361291570dd1a4de497.jpg\"\n  //                 alt=\"No esta\"\n  //               />\n  //             </div>\n  //             <div>\n  //               <ul>\n  //                 <li>HP: {pokemonS.health}</li>\n  //                 <li>weight: {pokemonS.weight}</li>\n  //                 <li>height: {pokemonS.height}</li>\n  //                 <li>attack: {pokemonS.attack}</li>\n  //                 <li>defense: {pokemonS.defense}</li>\n  //                 <li>speed: {pokemonS.speed}</li>\n  //                 <div>\n  //                   <img\n  //                     className={style.typeImg}\n  //                     src={`/images/Tipo_Pokemons/${pokemonS.tipo1}.gif`}\n  //                     alt=\"no encontrada\"\n  //                   />\n  //                   <img\n  //                     className={style.typeImg}\n  //                     src={`/images/Tipo_Pokemons/${pokemonS.tipo2}.gif`}\n  //                     alt=\"no encontrada\"\n  //                   />\n  //                 </div>\n  //               </ul>\n  //             </div>\n  //           </div>\n  //         ) : (\n  //           \"\"\n  //         )}\n  //       </div>\n  //     </div>\n  //   );\n  // }\n  // const mapStateToProps = (state) => {\n  //   return {\n  //     pokemonTypes: state.types,\n  //   };\n  // };\n  // const mapDispatchToProps = (dispatch) => {\n  //   return {\n  //     addPokemons: (pokemon) => dispatch(addPokemons(pokemon)),\n  //     GetTypes: () => dispatch(GetTypes())\n  //   };\n}\n\n_s(Creation, \"c6yMwg7h4iVlcvhCtCSBE3OSrhQ=\");\n\n_c = Creation;\n;\n\nconst mapStateToProps = state => {\n  return {\n    pokemonTypes: state.types\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPokemons: pokemon => dispatch(addPokemons(pokemon)),\n    GetTypes: () => dispatch(GetTypes())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Creation);\n\nvar _c;\n\n$RefreshReg$(_c, \"Creation\");","map":{"version":3,"sources":["C:/Users/dario/Desktop/PI-Pokemon-FT12-master/PI-Pokemon-FT12-master/client/src/components/Creation/Creation.jsx"],"names":["React","Fragment","useEffect","useState","connect","addPokemons","GetTypes","axios","FORMS","SPRITES","SPRITE_DEFAULT","POKEMON_URL","Creation","pokemonTypes","Data","setData","name","hp","attack","defense","speed","height","weight","type","sprite","Types","setTypes","length","total","map","t","i","includes","push","handleSubmit","e","console","log","preventDefault","post","err","handleChange","target","value","handleTypes","el","label","mapStateToProps","state","types","mapDispatchToProps","dispatch","pokemon"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPokemons, GetTypes } from \"../../actions/index\";\r\nimport '../Creation/Creation.css'\r\nimport axios from 'axios'\r\nimport { FORMS, SPRITES, SPRITE_DEFAULT, POKEMON_URL } from '../../utils/constants'\r\n\r\nexport function Creation({ pokemonTypes, GetTypes, addPokemons }) {\r\n    const [Data, setData] = useState({\r\n        name: '',\r\n        hp: '',\r\n        attack: '',\r\n        defense: '',\r\n        speed: '',\r\n        height: '',\r\n        weight: '',\r\n        type: [],\r\n        sprite: \"\",\r\n    });\r\n    const [Types, setTypes] = useState([]);\r\n    useEffect(() => {\r\n        GetTypes();\r\n    }, [GetTypes]);\r\n\r\n    useEffect(() => {\r\n        if (Types.length) {\r\n            let total = []\r\n            pokemonTypes.map((t, i) => {\r\n                if (Types.includes(t) === true) {\r\n                    total.push(i + 1)\r\n                }\r\n            })\r\n            setData({...Data, type: Types });\r\n        }\r\n    }, [Types]);\r\n    const handleSubmit = async(e) => {\r\n        console.log(\"Esto es types: \" + Types)\r\n        e.preventDefault();\r\n\r\n        try {\r\n            await axios.post(POKEMON_URL, Data);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n    };\r\n    const handleChange = (e) => {\r\n        setData({...Data, [e.target.name]: e.target.value });\r\n    };\r\n    const handleTypes = (e) => {\r\n        if (Types.length < 2) {\r\n            if (!Types.includes(e.target.value)) {\r\n                setTypes([...Types, e.target.value]);\r\n            }\r\n        } else setTypes([e.target.value]);\r\n    };\r\n    return ( <\r\n        form onSubmit = {\r\n            (e) => handleSubmit(e) } >\r\n        <\r\n        div className = 'div_g' >\r\n        <\r\n        div >\r\n        <\r\n        h1 className = 'title-create' > Create a Pokemon < /h1> <\r\n        /div> {\r\n            FORMS &&\r\n                FORMS.map((el, i) => ( <\r\n                    div key = { i }\r\n                    className = 'div_f' >\r\n                    <\r\n                    div key = { i }\r\n                    className = 'div_label' >\r\n                    <\r\n                    label key = { i }\r\n                    className = 'label' > { el.label }:\r\n                    <\r\n                    /label> <\r\n                    /div> <\r\n                    input className = 'input'\r\n                    key = { el.name }\r\n                    name = { el.name }\r\n                    type = 'text'\r\n                    autoComplete = 'off'\r\n                    onChange = {\r\n                        (e) => handleChange(e) }\r\n                    /> <\r\n                    /div>\r\n                ))\r\n        } <\r\n        div className = 'div_types' >\r\n        <\r\n        select onChange = {\r\n            (e) => handleTypes(e) } > {\r\n            pokemonTypes &&\r\n            pokemonTypes.map((t, i) => ( <\r\n                option key = { i }\r\n                value = { i + 1 } > { t } <\r\n                /option>\r\n            ))\r\n        } <\r\n        /select> <\r\n        div className = 'div_type_container' > 🧬Tipos {\r\n            Types &&\r\n                Types.map((el, i) => ( <\r\n                    div key = { i }\r\n                    className = 'div_type' >\r\n                    <\r\n                    label className = 'label' > { el } < /label> <\r\n                    /div>\r\n                ))\r\n        } <\r\n        /div> <\r\n        /div> <\r\n        div className = 'div_submit' >\r\n        <\r\n        button className = 'btn_submit'\r\n        type = 'submit' >\r\n        Create a Pokemon <\r\n        /button> <\r\n        /div> <\r\n        /div> <\r\n        /form>\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //======0000=======000000===============/////////////==============\r\n    //   const [pokemon, setPokemon] = useState({\r\n    //     name: \"\",\r\n    //     hp: \"\",\r\n    //     attack: \"\",\r\n    //     defense: \"\",\r\n    //     speed: \"\",\r\n    //     height: \"\",\r\n    //     weight: \"\",\r\n    //     type:[3],\r\n    //     sprite: \"\"\r\n    //   });\r\n    //   const [Types, setTypes] = useState([]);\r\n    //   const [pokemonS, setPokemonS] = useState({});\r\n    //   const [show, setShow] = useState(false);\r\n\r\n    //   useEffect(() => {\r\n    //       GetTypes()    \r\n    //       console.log(pokemon.type)    \r\n    //   },[GetTypes])\r\n\r\n    //   useEffect(() => {\r\n    //       if (Types.length) {\r\n    //         let total = pokemonTypes.reduce((acc, el) => {\r\n    //           if (Types.includes(el.name) === true) {\r\n    //             acc.push(el.id);\r\n    //           }\r\n    //           return acc;\r\n    //         }, []);\r\n    //         setPokemon({...pokemon, type: total});\r\n    //       }\r\n    //   }, [Types]);\r\n\r\n    //   const handleChange = (e) => {\r\n    //     setPokemon({\r\n    //       ...pokemon,\r\n    //       [e.target.name]: e.target.value,\r\n    //     });\r\n    //   };\r\n    //   const handlesubmit = async (e) => {\r\n    //     e.preventDefault();\r\n    //     console.log(\"body\"+pokemon)\r\n    //     //addPokemons(pokemon);\r\n    //     try {\r\n    //       await axios.post('http://localhost:3002/pokemons', pokemon)\r\n    //         .then(res => {\r\n    //           console.log(res)\r\n    //           console.log(res.data)\r\n    //         })\r\n\r\n    //     } catch (err) {\r\n    //       console.log(\"error del post\"+err);\r\n    //     }\r\n    //     setShow(true);\r\n    //     setPokemonS(pokemon);\r\n    //     setPokemon({\r\n    //       name: \"\",\r\n    //       hp: \"\",\r\n    //       attack: \"\",\r\n    //       defense: \"\",\r\n    //       speed: \"\",\r\n    //       height: \"\",\r\n    //       weight: \"\",\r\n    //       type:[],\r\n    //       sprite: \"\"\r\n    //     });\r\n    //   };\r\n    //   const handleTypes = (e) => {\r\n    // \t\tif (Types.length < 2) {\r\n    // \t\t\tif (!Types.includes(e.target.value)) {\r\n    // \t\t\t\tsetTypes([...Types, e.target.value]);\r\n    // \t\t\t}\r\n    // \t\t} else setTypes([e.target.value]);\r\n    // \t};\r\n\r\n    //   return (\r\n    //     <div className={style.container}>\r\n    //       <div className={style.subcontainerform}>\r\n    //         <form className={style.formcreate} onSubmit={handlesubmit}>\r\n    //             <label>Name: </label>\r\n    //             <input className={style.input} name=\"name\" value={pokemon.name} onChange={handleChange} />\r\n    //             <br/>\r\n    //             <label>HP:</label>\r\n    //             <input\r\n    //             className={style.input}\r\n    //               name=\"hp\"\r\n    //               value={pokemon.health}\r\n    //               onChange={handleChange}\r\n    //             />\r\n    //          <br/>\r\n    //             <label>Attack: </label>\r\n    //             <input\r\n    //             className={style.input}\r\n    //               name=\"attack\"\r\n    //               value={pokemon.attack}\r\n    //               onChange={handleChange}\r\n    //             />\r\n    //           <br/>\r\n    //             <label>Defense:</label>\r\n    //             <input\r\n    //             className={style.input}\r\n    //               name=\"defense\"\r\n    //               value={pokemon.defense}\r\n    //               onChange={handleChange}\r\n    //             />\r\n    //         <br/>\r\n    //             <label>Speed:</label>\r\n    //             <input className={style.input} name=\"speed\" value={pokemon.speed} onChange={handleChange} />\r\n    //             <br/>\r\n    //             <label>Height:</label>\r\n    //             <input\r\n    //             className={style.input}\r\n    //               name=\"height\"\r\n    //               value={pokemon.height}\r\n    //               onChange={handleChange}\r\n    //             />\r\n    //       <br/>\r\n    //             <label>Weight: </label>\r\n    //             <input\r\n    //             className={style.input}\r\n    //               name=\"weight\"\r\n    //               value={pokemon.weight}\r\n    //               onChange={handleChange}\r\n    //             />\r\n    //        <br/>\r\n    //             <label>Sprite:</label>\r\n    //             <input \r\n    //               className={style.input}\r\n    //               name=\"sprite\"\r\n    //               value={pokemon.sprite}\r\n    //               onChange={handleChange}\r\n    //             />\r\n    //           <select onChange={(e) => handleTypes(e)}>\r\n    // \t\t\t\t\t\t\t{pokemonTypes &&\r\n    // \t\t\t\t\t\t\t\tpokemonTypes.map((t, i) => (\r\n    // \t\t\t\t\t\t\t\t\t<option key={i} value={t}>\r\n    // \t\t\t\t\t\t\t\t\t\t{i+1}\r\n    // \t\t\t\t\t\t\t\t\t</option>\r\n    // \t\t\t\t\t\t\t\t))}\r\n    // \t\t\t\t\t\t</select>\r\n    //           <button className={style.button} type=\"submit\">enviar</button>\r\n    //         </form>\r\n    //       </div>\r\n\r\n    //       <div>\r\n    //         {show ? (\r\n    //           <div className={style.subcontainerform2}>\r\n    //             <div>\r\n    //               <h4>\r\n    //                 CREADO #{pokemonS.id} {pokemonS.name}\r\n    //               </h4>\r\n    //               <img\r\n    //                 src=\"https://i.pinimg.com/originals/76/ef/60/76ef60010a9ac361291570dd1a4de497.jpg\"\r\n    //                 alt=\"No esta\"\r\n    //               />\r\n    //             </div>\r\n\r\n    //             <div>\r\n    //               <ul>\r\n    //                 <li>HP: {pokemonS.health}</li>\r\n    //                 <li>weight: {pokemonS.weight}</li>\r\n    //                 <li>height: {pokemonS.height}</li>\r\n    //                 <li>attack: {pokemonS.attack}</li>\r\n    //                 <li>defense: {pokemonS.defense}</li>\r\n    //                 <li>speed: {pokemonS.speed}</li>\r\n    //                 <div>\r\n    //                   <img\r\n    //                     className={style.typeImg}\r\n    //                     src={`/images/Tipo_Pokemons/${pokemonS.tipo1}.gif`}\r\n    //                     alt=\"no encontrada\"\r\n    //                   />\r\n    //                   <img\r\n    //                     className={style.typeImg}\r\n    //                     src={`/images/Tipo_Pokemons/${pokemonS.tipo2}.gif`}\r\n    //                     alt=\"no encontrada\"\r\n    //                   />\r\n    //                 </div>\r\n    //               </ul>\r\n    //             </div>\r\n    //           </div>\r\n    //         ) : (\r\n    //           \"\"\r\n    //         )}\r\n    //       </div>\r\n    //     </div>\r\n    //   );\r\n    // }\r\n\r\n    // const mapStateToProps = (state) => {\r\n    //   return {\r\n    //     pokemonTypes: state.types,\r\n    //   };\r\n    // };\r\n\r\n    // const mapDispatchToProps = (dispatch) => {\r\n    //   return {\r\n    //     addPokemons: (pokemon) => dispatch(addPokemons(pokemon)),\r\n    //     GetTypes: () => dispatch(GetTypes())\r\n    //   };\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pokemonTypes: state.types,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPokemons: (pokemon) => dispatch(addPokemons(pokemon)),\r\n        GetTypes: () => dispatch(GetTypes())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Creation);"]},"metadata":{},"sourceType":"module"}
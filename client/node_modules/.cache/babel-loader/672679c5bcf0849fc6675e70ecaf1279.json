{"ast":null,"code":"// import {\n//     GetPokemonOrder,\n//     GetPokemonOrigin,\n//     GetPokemonType,\n//     GetPokemonsViews,\n// } from '../controllers/index';\nexport const GetPokemonOrder = (order, array) => {\n  switch (order) {\n    case 'A-Z':\n      return array.sort((a, b) => {\n        if (a.name > b.name) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n\n    case 'Z-A':\n      return array.sort((a, b) => {\n        if (a.name < b.name) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n\n    case 'More Attack':\n      return array.sort((a, b) => {\n        if (a.attack < b.attack) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n\n    case 'Less Attack':\n      return array.sort((a, b) => {\n        if (a.attack > b.attack) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n\n    default:\n      return array;\n  }\n};\n_c = GetPokemonOrder;\nexport const GetPokemonOrigin = (origin, array) => {\n  switch (origin) {\n    case 'API':\n      return array.filter(el => typeof el.id === 'number');\n\n    case 'Companion App':\n      let reg_ex = /-/;\n      return array.filter(el => el.id.toString().search(reg_ex) !== -1);\n\n    case 'All':\n      return array;\n\n    default:\n      return array;\n  }\n};\n_c2 = GetPokemonOrigin;\nexport const GetPokemonsViews = (array, min, max) => {\n  if (!min && !max) {\n    return array.slice(0, 12);\n  }\n\n  return array.slice(min, max);\n};\n_c3 = GetPokemonsViews;\nexport const GetPokemonType = (type, array) => {\n  if (type === 'All') return array;\n  let newArray = array.filter((el, i) => el.Types.length ? el.Types[0].name === type ? true : el.Types.length > 1 ? el.Types[1] === type ? true : false : false : false);\n  return newArray;\n};\n_c4 = GetPokemonType;\nconst initialState = {\n  pokemons: [],\n  pokemonDetail: [],\n  pokemonViews: {\n    all: [],\n    now: []\n  },\n  pokemonsTypes: [],\n  pokemonFilter: 'All',\n  pokemonOrigin: 'All'\n};\n\nconst pokeReducer = (state = initialState, {\n  payload,\n  type\n}) => {\n  switch (type) {\n    case 'GET_POKEMONS':\n      return { ...state,\n        pokemons: payload,\n        pokemonViews: {\n          all: payload,\n          now: GetPokemonsViews(payload)\n        }\n      };\n\n    case 'GET_POKEMONS_TYPES':\n      return { ...state,\n        pokemonsTypes: payload\n      };\n\n    case 'GET_POKEMON_DETAIL':\n      return { ...state,\n        pokemonDetail: payload\n      };\n\n    case 'SET_POKEMONS_VIEWS':\n      return { ...state,\n        pokemonViews: { ...state.pokemonViews,\n          now: GetPokemonsViews(state.pokemonViews.all, payload.min, payload.max)\n        }\n      };\n\n    case 'GET_POKEMON_NAME':\n      return { ...state,\n        pokemonViews: { ...state.pokemonViews,\n          all: GetPokemonsViews(payload),\n          now: GetPokemonsViews(payload)\n        },\n        pokemonFilter: 'Search'\n      };\n\n    case 'POKEMONS_ORDER':\n      return { ...state,\n        pokemonViews: { ...state.pokemonViews,\n          now: GetPokemonsViews(GetPokemonOrder(payload, state.pokemonViews.all))\n        },\n        pokemonFilter: payload\n      };\n\n    case 'POKEMONS_ORIGIN':\n      return { ...state,\n        pokemonViews: { ...state.pokemonViews,\n          now: GetPokemonsViews(GetPokemonOrigin(payload, state.pokemons)),\n          all: GetPokemonOrigin(payload, state.pokemons)\n        },\n        pokemonOrigin: payload,\n        /// API\n        pokemonFilter: payload\n      };\n\n    case 'POKEMONS_TYPE':\n      state.pokemonViews.all = GetPokemonType(payload, GetPokemonOrigin(state.pokemonOrigin, state.pokemons));\n      return { ...state,\n        pokemonViews: { ...state.pokemonViews,\n          now: GetPokemonsViews(state.pokemonViews.all)\n        },\n        pokemonFilter: payload\n      };\n\n    case 'CLEAR_POKEMON_DETAIL':\n      return { ...state,\n        pokemonDetail: [],\n        pokemonFilter: ''\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default pokeReducer;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GetPokemonOrder\");\n$RefreshReg$(_c2, \"GetPokemonOrigin\");\n$RefreshReg$(_c3, \"GetPokemonsViews\");\n$RefreshReg$(_c4, \"GetPokemonType\");","map":{"version":3,"sources":["C:/Users/dario/Desktop/PI-Pokemon-FT12-master/PI-Pokemon-FT12-master/client/src/reducers/index.js"],"names":["GetPokemonOrder","order","array","sort","a","b","name","attack","GetPokemonOrigin","origin","filter","el","id","reg_ex","toString","search","GetPokemonsViews","min","max","slice","GetPokemonType","type","newArray","i","Types","length","initialState","pokemons","pokemonDetail","pokemonViews","all","now","pokemonsTypes","pokemonFilter","pokemonOrigin","pokeReducer","state","payload"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAO,MAAMA,eAAe,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7C,UAAQD,KAAR;AACI,SAAK,KAAL;AACI,aAAOC,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,YAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACjB,iBAAO,CAAP;AACH,SAFD,MAEO;AACH,iBAAO,CAAC,CAAR;AACH;AACJ,OANM,CAAP;;AAOJ,SAAK,KAAL;AACI,aAAOJ,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,YAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACjB,iBAAO,CAAP;AACH,SAFD,MAEO;AACH,iBAAO,CAAC,CAAR;AACH;AACJ,OANM,CAAP;;AAOJ,SAAK,aAAL;AACI,aAAOJ,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,YAAID,CAAC,CAACG,MAAF,GAAWF,CAAC,CAACE,MAAjB,EAAyB;AACrB,iBAAO,CAAP;AACH,SAFD,MAEO;AACH,iBAAO,CAAC,CAAR;AACH;AACJ,OANM,CAAP;;AAOJ,SAAK,aAAL;AACI,aAAOL,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,YAAID,CAAC,CAACG,MAAF,GAAWF,CAAC,CAACE,MAAjB,EAAyB;AACrB,iBAAO,CAAP;AACH,SAFD,MAEO;AACH,iBAAO,CAAC,CAAR;AACH;AACJ,OANM,CAAP;;AAQJ;AACI,aAAOL,KAAP;AAnCR;AAqCH,CAtCM;KAAMF,e;AAwCb,OAAO,MAAMQ,gBAAgB,GAAG,CAACC,MAAD,EAASP,KAAT,KAAmB;AAC/C,UAAQO,MAAR;AACI,SAAK,KAAL;AACI,aAAOP,KAAK,CAACQ,MAAN,CAAcC,EAAD,IAAQ,OAAOA,EAAE,CAACC,EAAV,KAAiB,QAAtC,CAAP;;AAEJ,SAAK,eAAL;AACI,UAAIC,MAAM,GAAG,GAAb;AACA,aAAOX,KAAK,CAACQ,MAAN,CAAcC,EAAD,IAAQA,EAAE,CAACC,EAAH,CAAME,QAAN,GAAiBC,MAAjB,CAAwBF,MAAxB,MAAoC,CAAC,CAA1D,CAAP;;AAEJ,SAAK,KAAL;AACI,aAAOX,KAAP;;AAEJ;AACI,aAAOA,KAAP;AAZR;AAcH,CAfM;MAAMM,gB;AAiBb,OAAO,MAAMQ,gBAAgB,GAAG,CAACd,KAAD,EAAQe,GAAR,EAAaC,GAAb,KAAqB;AACjD,MAAI,CAACD,GAAD,IAAQ,CAACC,GAAb,EAAkB;AACd,WAAOhB,KAAK,CAACiB,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAP;AACH;;AACD,SAAOjB,KAAK,CAACiB,KAAN,CAAYF,GAAZ,EAAiBC,GAAjB,CAAP;AACH,CALM;MAAMF,gB;AAMb,OAAO,MAAMI,cAAc,GAAG,CAACC,IAAD,EAAOnB,KAAP,KAAiB;AAC3C,MAAImB,IAAI,KAAK,KAAb,EAAoB,OAAOnB,KAAP;AACpB,MAAIoB,QAAQ,GAAGpB,KAAK,CAACQ,MAAN,CAAa,CAACC,EAAD,EAAKY,CAAL,KACxBZ,EAAE,CAACa,KAAH,CAASC,MAAT,GACAd,EAAE,CAACa,KAAH,CAAS,CAAT,EAAYlB,IAAZ,KAAqBe,IAArB,GACA,IADA,GAEAV,EAAE,CAACa,KAAH,CAASC,MAAT,GAAkB,CAAlB,GACAd,EAAE,CAACa,KAAH,CAAS,CAAT,MAAgBH,IAAhB,GACA,IADA,GAEA,KAHA,GAIA,KAPA,GAQA,KATW,CAAf;AAWA,SAAOC,QAAP;AACH,CAdM;MAAMF,c;AAiBb,MAAMM,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,aAAa,EAAE,EAFE;AAGjBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,GAAG,EAAE,EADK;AAEVC,IAAAA,GAAG,EAAE;AAFK,GAHG;AAOjBC,EAAAA,aAAa,EAAE,EAPE;AAQjBC,EAAAA,aAAa,EAAE,KARE;AASjBC,EAAAA,aAAa,EAAE;AATE,CAArB;;AAYA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuB;AAAEW,EAAAA,OAAF;AAAWhB,EAAAA;AAAX,CAAvB,KAA6C;AAC7D,UAAQA,IAAR;AACI,SAAK,cAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHT,QAAAA,QAAQ,EAAEU,OAFP;AAGHR,QAAAA,YAAY,EAAE;AACVC,UAAAA,GAAG,EAAEO,OADK;AAEVN,UAAAA,GAAG,EAAEf,gBAAgB,CAACqB,OAAD;AAFX;AAHX,OAAP;;AAQJ,SAAK,oBAAL;AACI,aAAO,EACH,GAAGD,KADA;AAEHJ,QAAAA,aAAa,EAAEK;AAFZ,OAAP;;AAIJ,SAAK,oBAAL;AACI,aAAO,EACH,GAAGD,KADA;AAEHR,QAAAA,aAAa,EAAES;AAFZ,OAAP;;AAIJ,SAAK,oBAAL;AACI,aAAO,EACH,GAAGD,KADA;AAEHP,QAAAA,YAAY,EAAE,EACV,GAAGO,KAAK,CAACP,YADC;AAEVE,UAAAA,GAAG,EAAEf,gBAAgB,CACjBoB,KAAK,CAACP,YAAN,CAAmBC,GADF,EAEjBO,OAAO,CAACpB,GAFS,EAGjBoB,OAAO,CAACnB,GAHS;AAFX;AAFX,OAAP;;AAYJ,SAAK,kBAAL;AACI,aAAO,EACH,GAAGkB,KADA;AAEHP,QAAAA,YAAY,EAAE,EACV,GAAGO,KAAK,CAACP,YADC;AAEVC,UAAAA,GAAG,EAAEd,gBAAgB,CAACqB,OAAD,CAFX;AAGVN,UAAAA,GAAG,EAAEf,gBAAgB,CAACqB,OAAD;AAHX,SAFX;AAOHJ,QAAAA,aAAa,EAAE;AAPZ,OAAP;;AASJ,SAAK,gBAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHP,QAAAA,YAAY,EAAE,EACV,GAAGO,KAAK,CAACP,YADC;AAEVE,UAAAA,GAAG,EAAEf,gBAAgB,CACjBhB,eAAe,CAACqC,OAAD,EAAUD,KAAK,CAACP,YAAN,CAAmBC,GAA7B,CADE;AAFX,SAFX;AAQHG,QAAAA,aAAa,EAAEI;AARZ,OAAP;;AAUJ,SAAK,iBAAL;AACI,aAAO,EACH,GAAGD,KADA;AAEHP,QAAAA,YAAY,EAAE,EACV,GAAGO,KAAK,CAACP,YADC;AAEVE,UAAAA,GAAG,EAAEf,gBAAgB,CAACR,gBAAgB,CAAC6B,OAAD,EAAUD,KAAK,CAACT,QAAhB,CAAjB,CAFX;AAGVG,UAAAA,GAAG,EAAEtB,gBAAgB,CAAC6B,OAAD,EAAUD,KAAK,CAACT,QAAhB;AAHX,SAFX;AAQHO,QAAAA,aAAa,EAAEG,OARZ;AAQqB;AACxBJ,QAAAA,aAAa,EAAEI;AATZ,OAAP;;AAWJ,SAAK,eAAL;AACID,MAAAA,KAAK,CAACP,YAAN,CAAmBC,GAAnB,GAAyBV,cAAc,CACnCiB,OADmC,EAEnC7B,gBAAgB,CAAC4B,KAAK,CAACF,aAAP,EAAsBE,KAAK,CAACT,QAA5B,CAFmB,CAAvC;AAIA,aAAO,EACH,GAAGS,KADA;AAEHP,QAAAA,YAAY,EAAE,EACV,GAAGO,KAAK,CAACP,YADC;AAEVE,UAAAA,GAAG,EAAEf,gBAAgB,CAACoB,KAAK,CAACP,YAAN,CAAmBC,GAApB;AAFX,SAFX;AAMHG,QAAAA,aAAa,EAAEI;AANZ,OAAP;;AAQJ,SAAK,sBAAL;AACI,aAAO,EACH,GAAGD,KADA;AAEHR,QAAAA,aAAa,EAAE,EAFZ;AAGHK,QAAAA,aAAa,EAAE;AAHZ,OAAP;;AAKJ;AACI,aAAOG,KAAP;AAtFR;AAwFH,CAzFD;;AA2FA,eAAeD,WAAf","sourcesContent":["// import {\r\n//     GetPokemonOrder,\r\n//     GetPokemonOrigin,\r\n//     GetPokemonType,\r\n//     GetPokemonsViews,\r\n// } from '../controllers/index';\r\n\r\n\r\nexport const GetPokemonOrder = (order, array) => {\r\n    switch (order) {\r\n        case 'A-Z':\r\n            return array.sort((a, b) => {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            });\r\n        case 'Z-A':\r\n            return array.sort((a, b) => {\r\n                if (a.name < b.name) {\r\n                    return 1;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            });\r\n        case 'More Attack':\r\n            return array.sort((a, b) => {\r\n                if (a.attack < b.attack) {\r\n                    return 1;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            });\r\n        case 'Less Attack':\r\n            return array.sort((a, b) => {\r\n                if (a.attack > b.attack) {\r\n                    return 1;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            });\r\n\r\n        default:\r\n            return array;\r\n    }\r\n};\r\n\r\nexport const GetPokemonOrigin = (origin, array) => {\r\n    switch (origin) {\r\n        case 'API':\r\n            return array.filter((el) => typeof el.id === 'number');\r\n\r\n        case 'Companion App':\r\n            let reg_ex = /-/;\r\n            return array.filter((el) => el.id.toString().search(reg_ex) !== -1);\r\n\r\n        case 'All':\r\n            return array;\r\n\r\n        default:\r\n            return array;\r\n    }\r\n};\r\n\r\nexport const GetPokemonsViews = (array, min, max) => {\r\n    if (!min && !max) {\r\n        return array.slice(0, 12);\r\n    }\r\n    return array.slice(min, max);\r\n};\r\nexport const GetPokemonType = (type, array) => {\r\n    if (type === 'All') return array;\r\n    let newArray = array.filter((el, i) =>\r\n        el.Types.length ?\r\n        el.Types[0].name === type ?\r\n        true :\r\n        el.Types.length > 1 ?\r\n        el.Types[1] === type ?\r\n        true :\r\n        false :\r\n        false :\r\n        false\r\n    );\r\n    return newArray;\r\n};\r\n\r\n\r\nconst initialState = {\r\n    pokemons: [],\r\n    pokemonDetail: [],\r\n    pokemonViews: {\r\n        all: [],\r\n        now: [],\r\n    },\r\n    pokemonsTypes: [],\r\n    pokemonFilter: 'All',\r\n    pokemonOrigin: 'All',\r\n};\r\n\r\nconst pokeReducer = (state = initialState, { payload, type }) => {\r\n    switch (type) {\r\n        case 'GET_POKEMONS':\r\n            return {\r\n                ...state,\r\n                pokemons: payload,\r\n                pokemonViews: {\r\n                    all: payload,\r\n                    now: GetPokemonsViews(payload),\r\n                },\r\n            };\r\n        case 'GET_POKEMONS_TYPES':\r\n            return {\r\n                ...state,\r\n                pokemonsTypes: payload,\r\n            };\r\n        case 'GET_POKEMON_DETAIL':\r\n            return {\r\n                ...state,\r\n                pokemonDetail: payload,\r\n            };\r\n        case 'SET_POKEMONS_VIEWS':\r\n            return {\r\n                ...state,\r\n                pokemonViews: {\r\n                    ...state.pokemonViews,\r\n                    now: GetPokemonsViews(\r\n                        state.pokemonViews.all,\r\n                        payload.min,\r\n                        payload.max\r\n                    ),\r\n                },\r\n            };\r\n\r\n        case 'GET_POKEMON_NAME':\r\n            return {\r\n                ...state,\r\n                pokemonViews: {\r\n                    ...state.pokemonViews,\r\n                    all: GetPokemonsViews(payload),\r\n                    now: GetPokemonsViews(payload),\r\n                },\r\n                pokemonFilter: 'Search',\r\n            };\r\n        case 'POKEMONS_ORDER':\r\n            return {\r\n                ...state,\r\n                pokemonViews: {\r\n                    ...state.pokemonViews,\r\n                    now: GetPokemonsViews(\r\n                        GetPokemonOrder(payload, state.pokemonViews.all)\r\n                    ),\r\n                },\r\n                pokemonFilter: payload,\r\n            };\r\n        case 'POKEMONS_ORIGIN':\r\n            return {\r\n                ...state,\r\n                pokemonViews: {\r\n                    ...state.pokemonViews,\r\n                    now: GetPokemonsViews(GetPokemonOrigin(payload, state.pokemons)),\r\n                    all: GetPokemonOrigin(payload, state.pokemons),\r\n                },\r\n\r\n                pokemonOrigin: payload, /// API\r\n                pokemonFilter: payload,\r\n            };\r\n        case 'POKEMONS_TYPE':\r\n            state.pokemonViews.all = GetPokemonType(\r\n                payload,\r\n                GetPokemonOrigin(state.pokemonOrigin, state.pokemons)\r\n            );\r\n            return {\r\n                ...state,\r\n                pokemonViews: {\r\n                    ...state.pokemonViews,\r\n                    now: GetPokemonsViews(state.pokemonViews.all),\r\n                },\r\n                pokemonFilter: payload,\r\n            };\r\n        case 'CLEAR_POKEMON_DETAIL':\r\n            return {\r\n                ...state,\r\n                pokemonDetail: [],\r\n                pokemonFilter: '',\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default pokeReducer;"]},"metadata":{},"sourceType":"module"}
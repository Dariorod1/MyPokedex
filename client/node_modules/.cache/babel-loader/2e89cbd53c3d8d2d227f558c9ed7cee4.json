{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dario\\\\Desktop\\\\PI-Pokemon-FT12-master\\\\PI-Pokemon-FT12-master\\\\client\\\\src\\\\components\\\\PokemonDetail\\\\PokemonDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport '../PokemonDetail/PokemonDetail.css';\nimport { getDetails, GetName } from \"../../actions/index\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonDetail = props => {\n  _s();\n\n  let id = props.match.params.id;\n  useEffect(() => {\n    props.getDetails(id);\n    console.log(id);\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detalle\",\n    children: props.state && props.state.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: p.sprite,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: p.name[0].toUpperCase() + p.name.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cuadro-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"HP: \", props.state[0].hp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Attack: \", p.attack]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Defense: \", p.defense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Speed: \", p.speed]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Height: \", p.height]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Weight: \", p.weight]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tipo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"types\",\n          children: p.Types && p.Types.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tipo-detalle\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: t.name[0].toUpperCase() + t.name.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonDetail, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PokemonDetail;\n\nconst mapStateToProps = state => {\n  return {\n    state: state.pokemonDetails\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDetails: id => dispatch(getDetails(id)),\n    GetName: id => dispatch(GetName(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonDetail\");","map":{"version":3,"sources":["C:/Users/dario/Desktop/PI-Pokemon-FT12-master/PI-Pokemon-FT12-master/client/src/components/PokemonDetail/PokemonDetail.jsx"],"names":["React","useEffect","useState","connect","getDetails","GetName","Link","PokemonDetail","props","id","match","params","console","log","state","map","p","sprite","name","toUpperCase","slice","hp","attack","defense","speed","height","weight","Types","t","mapStateToProps","pokemonDetails","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport '../PokemonDetail/PokemonDetail.css'\r\nimport { getDetails,GetName } from \"../../actions/index\";\r\nimport {Link} from 'react-router-dom';\r\nconst PokemonDetail = (props) => {\r\n    \r\n    let id = props.match.params.id\r\n    useEffect(() => {\r\n        props.getDetails(id);\r\n        console.log(id)\r\n      }, [id]);\r\n      \r\n    return (\r\n        <div className=\"detalle\">                \r\n             {\r\n                 props.state && props.state.map(p=>(\r\n                    <div>\r\n                        <img src={p.sprite} alt=\"\" />\r\n                        <h1>Name:</h1>\r\n                        <h2>{p.name[0].toUpperCase() + p.name.slice(1)}</h2>\r\n                        <div className=\"cuadro-stats\">\r\n                        <div className=\"stats\">\r\n                            <h3>HP: {props.state[0].hp}</h3>\r\n                            <h3>Attack: {p.attack}</h3>\r\n                            <h3>Defense: {p.defense}</h3>\r\n                        </div>\r\n                        <div className=\"stats\">\r\n                            <h3>Speed: {p.speed}</h3>\r\n                            <h3>Height: {p.height}</h3>\r\n                            <h3>Weight: {p.weight}</h3>\r\n                        </div>\r\n                        \r\n                        \r\n                        <h2>Tipo:</h2>\r\n                        <div className=\"types\">\r\n                        {\r\n                            p.Types && p.Types.map(t=>(\r\n                                <div className=\"tipo-detalle\">\r\n                                <span>{t.name[0].toUpperCase() + t.name.slice(1)}</span>\r\n                                </div>\r\n                                \r\n                            ))\r\n                        }\r\n                        </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                 ))\r\n             }\r\n             \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      state: state.pokemonDetails,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getDetails: (id) => dispatch(getDetails(id)),\r\n      GetName : (id) => dispatch(GetName(id))\r\n    };\r\n  };\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PokemonDetail)\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { ADDPOKEMON } from \"../actions/index\";\nimport { GETCREATE } from \"../actions/index\";\nimport { GETDETAILS } from \"../actions/index\";\nimport { GETNAME } from \"../actions/index\";\nimport { GETPOKEMONS } from \"../actions/index\";\nimport { GETTYPES, GETAPI } from \"../actions/index\";\nimport { POKEMONS_ORDER, POKEMONS_ORIGIN, POKEMON_TYPES } from '../actions/index';\nexport const GetPokemonOrder = (order, array) => {\n  switch (order) {\n    case 'A-Z':\n      return array.sort((a, b) => {\n        if (a.name > b.name) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n\n    case 'Z-A':\n      return array.sort((a, b) => {\n        if (a.name < b.name) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n\n    case 'More Attack':\n      return array.sort((a, b) => {\n        if (a.attack < b.attack) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n\n    case 'Less Attack':\n      return array.sort((a, b) => {\n        if (a.attack > b.attack) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n\n    default:\n      return array;\n  }\n};\n_c = GetPokemonOrder;\nexport const GetPokemonOrigin = (origin, array) => {\n  switch (origin) {\n    case 'API':\n      return array.filter(el => typeof el.id === 'number');\n\n    case 'Companion App':\n      let reg_ex = /-/;\n      return array.filter(el => el.id.toString().search(reg_ex) !== -1);\n\n    case 'All':\n      return array;\n\n    default:\n      return array;\n  }\n};\n_c2 = GetPokemonOrigin;\nexport const GetPokemonType = (type, array) => {\n  if (type === 'All') return array;\n  let newArray = array.filter((el, i) => el.Type.length ? el.Type[0].name === type ? true : el.Type.length > 1 ? el.Type[1] === type ? true : false : false : false);\n  return newArray;\n};\n_c3 = GetPokemonType;\nexport const GetPokemonsViews = (array, min, max) => {\n  if (!min && !max) {\n    return array.slice(0, 12);\n  }\n\n  return array.slice(min, max);\n};\n_c4 = GetPokemonsViews;\nconst initialState = {\n  pokemonDetails: [],\n  pokemonName: [],\n  loading: false,\n  pokemonHome: [],\n  pokemonViews: {\n    all: [],\n    now: []\n  },\n  types: [],\n  pokemonCreate: [],\n  pokemonFilter: [],\n  CreateFilter: [],\n  pokemonsTypes: [],\n  pokemonFilter: 'All',\n  pokemonOrigin: 'All'\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GETPOKEMONS:\n      return { ...state,\n        pokemonHome: action.payload,\n        pokemonViews: {\n          all: action.payload,\n          now: GetPokemonsViews(action.payload)\n        }\n      };\n\n    case GETDETAILS:\n      return { ...state,\n        pokemonDetails: action.payload,\n        loading: false\n      };\n\n    case GETTYPES:\n      return { ...state,\n        types: action.payload\n      };\n\n    case GETNAME:\n      return { ...state,\n        pokemonHome: action.payload,\n        loading: true\n      };\n\n    case GETCREATE:\n      return { ...state,\n        pokemonHome: action.payload\n      };\n\n    case GETAPI:\n      return { ...state,\n        pokemonHome: action.payload\n      };\n\n    case ADDPOKEMON:\n      return { ...state\n      };\n\n    case POKEMONS_ORDER:\n      return { ...state,\n        pokemonViews: { ...state.pokemonViews,\n          now: GetPokemonsViews(GetPokemonOrder(action.payload, state.pokemonViews.all))\n        },\n        pokemonFilter: action.payload\n      };\n\n    case POKEMON_TYPES:\n      state.pokemonViews.all = GetPokemonType(action.payload, GetPokemonOrigin(state.pokemonOrigin, state.pokemons));\n      return { ...state,\n        pokemonViews: { ...state.pokemonViews,\n          now: GetPokemonsViews(state.pokemonViews.all)\n        },\n        pokemonFilter: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default rootReducer;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GetPokemonOrder\");\n$RefreshReg$(_c2, \"GetPokemonOrigin\");\n$RefreshReg$(_c3, \"GetPokemonType\");\n$RefreshReg$(_c4, \"GetPokemonsViews\");","map":{"version":3,"sources":["C:/Users/dario/Desktop/PI-Pokemon-FT12-master/PI-Pokemon-FT12-master/client/src/reducer/index.js"],"names":["ADDPOKEMON","GETCREATE","GETDETAILS","GETNAME","GETPOKEMONS","GETTYPES","GETAPI","POKEMONS_ORDER","POKEMONS_ORIGIN","POKEMON_TYPES","GetPokemonOrder","order","array","sort","a","b","name","attack","GetPokemonOrigin","origin","filter","el","id","reg_ex","toString","search","GetPokemonType","type","newArray","i","Type","length","GetPokemonsViews","min","max","slice","initialState","pokemonDetails","pokemonName","loading","pokemonHome","pokemonViews","all","now","types","pokemonCreate","pokemonFilter","CreateFilter","pokemonsTypes","pokemonOrigin","rootReducer","state","action","payload","pokemons"],"mappings":"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","sourcesContent":["import { ADDPOKEMON } from \"../actions/index\";\r\nimport { GETCREATE } from \"../actions/index\";\r\nimport { GETDETAILS } from \"../actions/index\";\r\nimport { GETNAME } from \"../actions/index\";\r\nimport { GETPOKEMONS } from \"../actions/index\";\r\nimport { GETTYPES, GETAPI } from \"../actions/index\";\r\nimport { POKEMONS_ORDER, POKEMONS_ORIGIN, POKEMON_TYPES } from '../actions/index'\r\nexport const GetPokemonOrder = (order, array) => {\r\n\r\n    switch (order) {\r\n        case 'A-Z':\r\n            return array.sort((a, b) => {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            });\r\n        case 'Z-A':\r\n            return array.sort((a, b) => {\r\n                if (a.name < b.name) {\r\n                    return 1;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            });\r\n        case 'More Attack':\r\n            return array.sort((a, b) => {\r\n                if (a.attack < b.attack) {\r\n                    return 1;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            });\r\n        case 'Less Attack':\r\n            return array.sort((a, b) => {\r\n                if (a.attack > b.attack) {\r\n                    return 1;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            });\r\n\r\n        default:\r\n            return array;\r\n    }\r\n};\r\nexport const GetPokemonOrigin = (origin, array) => {\r\n    switch (origin) {\r\n        case 'API':\r\n            return array.filter((el) => typeof el.id === 'number');\r\n\r\n        case 'Companion App':\r\n            let reg_ex = /-/;\r\n            return array.filter((el) => el.id.toString().search(reg_ex) !== -1);\r\n\r\n        case 'All':\r\n            return array;\r\n\r\n        default:\r\n            return array;\r\n    }\r\n};\r\nexport const GetPokemonType = (type, array) => {\r\n    if (type === 'All') return array;\r\n    let newArray = array.filter((el, i) =>\r\n        el.Type.length ?\r\n        el.Type[0].name === type ?\r\n        true :\r\n        el.Type.length > 1 ?\r\n        el.Type[1] === type ?\r\n        true :\r\n        false :\r\n        false :\r\n        false\r\n    );\r\n    return newArray;\r\n};\r\n\r\nexport const GetPokemonsViews = (array, min, max) => {\r\n    if (!min && !max) {\r\n        return array.slice(0, 12);\r\n    }\r\n    return array.slice(min, max);\r\n};\r\n\r\nconst initialState = {\r\n    pokemonDetails: [],\r\n    pokemonName: [],\r\n    loading: false,\r\n    pokemonHome: [],\r\n    pokemonViews: {\r\n        all: [],\r\n        now: [],\r\n    },\r\n    types: [],\r\n    pokemonCreate: [],\r\n    pokemonFilter: [],\r\n    CreateFilter: [],\r\n    pokemonsTypes: [],\r\n    pokemonFilter: 'All',\r\n    pokemonOrigin: 'All',\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GETPOKEMONS:\r\n            return {\r\n                ...state,\r\n                pokemonHome: action.payload,\r\n                pokemonViews: {\r\n                    all: action.payload,\r\n                    now: GetPokemonsViews(action.payload),\r\n                }\r\n            };\r\n\r\n        case GETDETAILS:\r\n            return {\r\n                ...state,\r\n                pokemonDetails: action.payload,\r\n\r\n                loading: false,\r\n            };\r\n\r\n        case GETTYPES:\r\n            return {\r\n                ...state,\r\n                types: action.payload,\r\n            };\r\n\r\n        case GETNAME:\r\n            return {\r\n                ...state,\r\n                pokemonHome: action.payload,\r\n                loading: true,\r\n            };\r\n        case GETCREATE:\r\n            return {\r\n                ...state,\r\n                pokemonHome: action.payload,\r\n            };\r\n        case GETAPI:\r\n            return {\r\n                ...state,\r\n                pokemonHome: action.payload\r\n            }\r\n        case ADDPOKEMON:\r\n            return {\r\n                ...state,\r\n            };\r\n        case POKEMONS_ORDER:\r\n            return {\r\n                ...state,\r\n                pokemonViews: {\r\n                    ...state.pokemonViews,\r\n                    now: GetPokemonsViews(\r\n                        GetPokemonOrder(action.payload, state.pokemonViews.all)\r\n                    ),\r\n                },\r\n                pokemonFilter: action.payload\r\n\r\n            };\r\n\r\n        case POKEMON_TYPES:\r\n            state.pokemonViews.all = GetPokemonType(\r\n                action.payload,\r\n                GetPokemonOrigin(state.pokemonOrigin, state.pokemons)\r\n            );\r\n            return {\r\n                ...state,\r\n                pokemonViews: {\r\n                    ...state.pokemonViews,\r\n                    now: GetPokemonsViews(state.pokemonViews.all),\r\n                },\r\n                pokemonFilter: action.payload,\r\n            };\r\n\r\n        default:\r\n            return {...state };\r\n    }\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}
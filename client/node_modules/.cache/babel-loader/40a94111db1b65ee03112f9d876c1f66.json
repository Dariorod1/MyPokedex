{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dario\\\\Desktop\\\\PI-Pokemon-FT12-master\\\\PI-Pokemon-FT12-master\\\\client\\\\src\\\\components\\\\Creation\\\\Creation.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addPokemons, GetTypes } from \"../../actions/index\";\nimport '../Creation/Creation.css';\nimport axios from 'axios';\nimport { FORMS, SPRITES, SPRITE_DEFAULT, POKEMON_URL } from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Creation({\n  pokemonTypes,\n  GetTypes,\n  addPokemons\n}) {\n  _s();\n\n  const [Data, setData] = useState({\n    name: '',\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    height: '',\n    weight: '',\n    type: [],\n    sprite: \"\"\n  });\n  const [Types, setTypes] = useState([]);\n  const [Errors, setErrors] = useState({});\n  useEffect(() => {\n    GetTypes();\n  }, [GetTypes]);\n  useEffect(() => {\n    if (Types.length) {\n      let total = [];\n      pokemonTypes.map((t, i) => {\n        if (Types.includes(t) === true) {\n          total.push(i + 1);\n        }\n      });\n      setData({ ...Data,\n        type: Types\n      });\n    }\n  }, [Types]);\n\n  const handleSubmit = async e => {\n    if (Data.name === \"\") {\n      alert(\"Falta nombre\");\n    } else if (Data.hp === \"\") {\n      alert(\"Falta hp y debe ser un nÃºmero\");\n    }\n\n    console.log(\"Esto es types: \" + Types);\n    e.preventDefault();\n\n    try {\n      await axios.post(POKEMON_URL, Data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = e => {\n    setData({ ...Data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleTypes = e => {\n    if (Types.length < 2) {\n      if (!Types.includes(e.target.value)) {\n        setTypes([...Types, e.target.value]);\n      }\n    } else setTypes([e.target.value]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div_g\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-create\",\n          children: \"Create a Pokemon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this), FORMS && FORMS.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div_f\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div_label\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: [el.label, \":\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 10\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          name: el.name,\n          type: \"text\",\n          autoComplete: \"off\",\n          onChange: e => handleChange(e)\n        }, el.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div_types\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleTypes(e),\n          children: pokemonTypes && pokemonTypes.map((t, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i + 1,\n            children: t\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 10\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div_type_container\",\n          children: [\"\\uD83E\\uDDECTipos\", Types && Types.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div_type\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              children: el\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 11\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 10\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div_submit\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_submit\",\n          type: \"submit\",\n          children: \"Create a Pokemon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Creation, \"pQgxecdvLlfrG998oMSZiFUFEn4=\");\n\n_c = Creation;\n;\n\nconst mapStateToProps = state => {\n  return {\n    pokemonTypes: state.types\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPokemons: pokemon => dispatch(addPokemons(pokemon)),\n    GetTypes: () => dispatch(GetTypes())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Creation);\n\nvar _c;\n\n$RefreshReg$(_c, \"Creation\");","map":{"version":3,"sources":["C:/Users/dario/Desktop/PI-Pokemon-FT12-master/PI-Pokemon-FT12-master/client/src/components/Creation/Creation.jsx"],"names":["React","Fragment","useEffect","useState","connect","addPokemons","GetTypes","axios","FORMS","SPRITES","SPRITE_DEFAULT","POKEMON_URL","Creation","pokemonTypes","Data","setData","name","hp","attack","defense","speed","height","weight","type","sprite","Types","setTypes","Errors","setErrors","length","total","map","t","i","includes","push","handleSubmit","e","alert","console","log","preventDefault","post","err","handleChange","target","value","handleTypes","el","label","mapStateToProps","state","types","mapDispatchToProps","dispatch","pokemon"],"mappings":"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","sourcesContent":["import React, { Fragment , useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPokemons,GetTypes } from \"../../actions/index\";\r\nimport '../Creation/Creation.css'\r\nimport axios from 'axios'\r\nimport {FORMS, SPRITES,SPRITE_DEFAULT,POKEMON_URL} from '../../utils/constants'\r\n\r\nexport function Creation({pokemonTypes, GetTypes,addPokemons}) {\r\n  const [Data, setData] = useState({\r\n\t\tname: '',\r\n\t\thp: '',\r\n\t\tattack: '',\r\n\t\tdefense: '',\r\n\t\tspeed: '',\r\n\t\theight: '',\r\n\t\tweight: '',\r\n\t\ttype: [],\r\n\t\tsprite: \"\",\r\n\t});\r\n  const [Types, setTypes] = useState([]);\r\n  const [Errors, setErrors] = useState({});\r\n  useEffect(() => {\r\n\t\tGetTypes();\r\n\t}, [GetTypes]);\r\n  \r\n  useEffect(() => {\r\n\tif (Types.length) {\r\n      let total = []\r\n      pokemonTypes.map((t,i) => {\r\n        if(Types.includes(t) === true){\r\n          total.push(i+1)\r\n        }\r\n      })\r\n\t\t\tsetData({...Data, type: Types});\r\n\t}\r\n}, [Types]);\r\n  const handleSubmit = async (e) => {\r\n\t  if(Data.name === \"\"){\r\n\t\talert(\"Falta nombre\")\r\n\t  }else if(Data.hp === \"\"){\r\n\t\t  alert(\"Falta hp y debe ser un nÃºmero\")\r\n\t  }\r\n    console.log(\"Esto es types: \" + Types)\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tawait axios.post(POKEMON_URL, Data);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n  const handleChange = (e) => {\r\n\t\tsetData({...Data, [e.target.name]: e.target.value});\r\n\t};\r\n  const handleTypes = (e) => {\r\n\t\tif (Types.length < 2) {\r\n\t\t\tif (!Types.includes(e.target.value)) {\r\n\t\t\t\tsetTypes([...Types, e.target.value]);\r\n\t\t\t}\r\n\t\t} else setTypes([e.target.value]);\r\n\t};\r\n  return(\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n\t\t\t\t<div className='div_g'>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h1 className='title-create'>Create a Pokemon</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{FORMS &&\r\n\t\t\t\t\t\tFORMS.map((el, i) => (\r\n\t\t\t\t\t\t\t<div key={i} className='div_f'>\r\n\t\t\t\t\t\t\t\t<div key={i} className='div_label'>\r\n\t\t\t\t\t\t\t\t\t<label key={i} className='label'>\r\n\t\t\t\t\t\t\t\t\t\t{el.label}:\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName='input'\r\n\t\t\t\t\t\t\t\t\tkey={el.name}\r\n\t\t\t\t\t\t\t\t\tname={el.name}\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n            <div className='div_types'>\r\n\t\t\t\t\t\t<select onChange={(e) => handleTypes(e)}>\r\n\t\t\t\t\t\t\t{pokemonTypes &&\r\n\t\t\t\t\t\t\t\tpokemonTypes.map((t, i) => (\r\n\t\t\t\t\t\t\t\t\t<option key={i} value={i+1}>\r\n\t\t\t\t\t\t\t\t\t\t{t}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<div className='div_type_container'>\r\n            ð§¬Tipos\r\n\t\t\t\t\t\t\t{Types &&\r\n\t\t\t\t\t\t\t\tTypes.map((el, i) => (\r\n\t\t\t\t\t\t\t\t\t<div key={i} className='div_type'>\r\n\t\t\t\t\t\t\t\t\t\t<label className='label'>{el}</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='div_submit'>\r\n\t\t\t\t\t\t<button className='btn_submit' type='submit' >\r\n\t\t\t\t\t\t\tCreate a Pokemon\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n  )\r\n\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    pokemonTypes: state.types,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPokemons: (pokemon) => dispatch(addPokemons(pokemon)),\r\n    GetTypes: () => dispatch(GetTypes())\r\n}}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Creation);\r\n"]},"metadata":{},"sourceType":"module"}
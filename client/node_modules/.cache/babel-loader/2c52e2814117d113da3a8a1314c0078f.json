{"ast":null,"code":"import { ADDPOKEMON } from \"../actions/index\";\nimport { GETCREATE } from \"../actions/index\";\nimport { GETDETAILS } from \"../actions/index\";\nimport { GETNAME } from \"../actions/index\";\nimport { GETPOKEMONS } from \"../actions/index\";\nimport { GETTYPES } from \"../actions/index\";\nimport { POKEMONS_ORDER, POKEMONS_ORIGIN, POKEMON_TYPES } from '../actions/index';\nconst initialState = {\n  pokemonDetails: [],\n  pokemonName: [],\n  loading: false,\n  pokemonHome: [],\n  pokemonViews: {\n    all: [],\n    now: []\n  },\n  types: [],\n  pokemonCreate: [],\n  pokemonFilter: [],\n  CreateFilter: []\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GETPOKEMONS:\n      return { ...state,\n        pokemonHome: action.payload\n      };\n\n    case GETDETAILS:\n      return { ...state,\n        pokemonDetails: action.payload,\n        loading: false\n      };\n\n    case GETTYPES:\n      return { ...state,\n        types: action.payload\n      };\n\n    case GETNAME:\n      return { ...state,\n        pokemonHome: action.payload,\n        loading: true\n      };\n\n    case GETCREATE:\n      return { ...state,\n        pokemonCreate: action.payload\n      };\n\n    case ADDPOKEMON:\n      return { ...state\n      };\n\n    case POKEMONS_ORDER:\n      return { ...state,\n        pokemonViews: { ...state.pokemonViews,\n          now: GetPokemonsViews(GetPokemonOrder(action.payload, state.pokemonViews.all))\n        },\n        pokemonFilter: action.payload\n      };\n\n    case POKEMONS_ORIGIN:\n      return { ...state,\n        pokemonViews: { ...state.pokemonViews,\n          now: GetPokemonsViews(GetPokemonOrigin(action.payload, state.pokemons)),\n          all: GetPokemonOrigin(action.payload, state.pokemons)\n        },\n        pokemonOrigin: action.payload,\n        /// API\n        pokemonFilter: action.payload\n      };\n\n    case POKEMON_TYPES:\n      state.pokemonViews.all = GetPokemonType(action.payload, GetPokemonOrigin(state.pokemonOrigin, state.pokemons));\n      return { ...state,\n        pokemonViews: { ...state.pokemonViews,\n          now: GetPokemonsViews(state.pokemonViews.all)\n        },\n        pokemonFilter: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/dario/Desktop/PI-Pokemon-FT12-master/PI-Pokemon-FT12-master/client/src/reducer/index.js"],"names":["ADDPOKEMON","GETCREATE","GETDETAILS","GETNAME","GETPOKEMONS","GETTYPES","POKEMONS_ORDER","POKEMONS_ORIGIN","POKEMON_TYPES","initialState","pokemonDetails","pokemonName","loading","pokemonHome","pokemonViews","all","now","types","pokemonCreate","pokemonFilter","CreateFilter","rootReducer","state","action","type","payload","GetPokemonsViews","GetPokemonOrder","GetPokemonOrigin","pokemons","pokemonOrigin","GetPokemonType"],"mappings":"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","sourcesContent":["import { ADDPOKEMON } from \"../actions/index\";\r\nimport { GETCREATE } from \"../actions/index\";\r\nimport { GETDETAILS } from \"../actions/index\";\r\nimport { GETNAME } from \"../actions/index\";\r\nimport { GETPOKEMONS } from \"../actions/index\";\r\nimport { GETTYPES } from \"../actions/index\";\r\nimport { POKEMONS_ORDER, POKEMONS_ORIGIN, POKEMON_TYPES } from '../actions/index'\r\n\r\nconst initialState = {\r\n    pokemonDetails: [],\r\n    pokemonName: [],\r\n    loading: false,\r\n    pokemonHome: [],\r\n    pokemonViews: {\r\n        all: [],\r\n        now: [],\r\n    },\r\n    types: [],\r\n    pokemonCreate: [],\r\n    pokemonFilter: [],\r\n    CreateFilter: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GETPOKEMONS:\r\n            return {\r\n                ...state,\r\n                pokemonHome: action.payload,\r\n            };\r\n\r\n        case GETDETAILS:\r\n            return {\r\n                ...state,\r\n                pokemonDetails: action.payload,\r\n                loading: false,\r\n            };\r\n\r\n        case GETTYPES:\r\n            return {\r\n                ...state,\r\n                types: action.payload,\r\n            };\r\n\r\n        case GETNAME:\r\n            return {\r\n                ...state,\r\n                pokemonHome: action.payload,\r\n                loading: true,\r\n            };\r\n        case GETCREATE:\r\n            return {\r\n                ...state,\r\n                pokemonCreate: action.payload,\r\n            };\r\n        case ADDPOKEMON:\r\n            return {\r\n                ...state,\r\n            };\r\n        case POKEMONS_ORDER:\r\n            return {\r\n                ...state,\r\n                pokemonViews: {\r\n                    ...state.pokemonViews,\r\n                    now: GetPokemonsViews(\r\n                        GetPokemonOrder(action.payload, state.pokemonViews.all)\r\n                    ),\r\n                },\r\n                pokemonFilter: action.payload,\r\n            };\r\n        case POKEMONS_ORIGIN:\r\n            return {\r\n                ...state,\r\n                pokemonViews: {\r\n                    ...state.pokemonViews,\r\n                    now: GetPokemonsViews(GetPokemonOrigin(action.payload, state.pokemons)),\r\n                    all: GetPokemonOrigin(action.payload, state.pokemons),\r\n                },\r\n\r\n                pokemonOrigin: action.payload, /// API\r\n                pokemonFilter: action.payload,\r\n            };\r\n        case POKEMON_TYPES:\r\n            state.pokemonViews.all = GetPokemonType(\r\n                action.payload,\r\n                GetPokemonOrigin(state.pokemonOrigin, state.pokemons)\r\n            );\r\n            return {\r\n                ...state,\r\n                pokemonViews: {\r\n                    ...state.pokemonViews,\r\n                    now: GetPokemonsViews(state.pokemonViews.all),\r\n                },\r\n                pokemonFilter: action.payload,\r\n            };\r\n\r\n        default:\r\n            return {...state };\r\n    }\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}
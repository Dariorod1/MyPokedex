{"ast":null,"code":"import { ADDPOKEMON } from \"../actions/index\";\nimport { GETCREATE } from \"../actions/index\";\nimport { GETDETAILS } from \"../actions/index\";\nimport { GETNAME } from \"../actions/index\";\nimport { GETPOKEMONS } from \"../actions/index\";\nimport { GETTYPES } from \"../actions/index\";\nimport { POKEMONS_ORDER, POKEMONS_ORIGIN, POKEMON_TYPES } from '../actions/index';\nconst initialState = {\n  pokemonDetails: [],\n  pokemonName: [],\n  loading: false,\n  pokemonHome: [],\n  types: [],\n  pokemonCreate: [],\n  pokemonFilter: [],\n  CreateFilter: []\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GETPOKEMONS:\n      return { ...state,\n        pokemonHome: action.payload\n      };\n\n    case GETDETAILS:\n      return { ...state,\n        pokemonDetails: action.payload,\n        loading: false\n      };\n\n    case GETTYPES:\n      return { ...state,\n        types: action.payload\n      };\n\n    case GETNAME:\n      return { ...state,\n        pokemonHome: action.payload,\n        loading: true\n      };\n\n    case GETCREATE:\n      return { ...state,\n        pokemonCreate: action.payload\n      };\n\n    case ADDPOKEMON:\n      return { ...state\n      };\n\n    case POKEMONS_ORDER:\n      return { ...state,\n        pokemonViews: { ...state.pokemonViews,\n          now: GetPokemonsViews(GetPokemonOrder(payload, state.pokemonViews.all))\n        },\n        pokemonFilter: payload\n      };\n\n    case POKEMONS_ORIGIN:\n      return { ...state,\n        pokemonViews: { ...state.pokemonViews,\n          now: GetPokemonsViews(GetPokemonOrigin(payload, state.pokemons)),\n          all: GetPokemonOrigin(payload, state.pokemons)\n        },\n        pokemonOrigin: payload,\n        /// API\n        pokemonFilter: payload\n      };\n\n    case POKEMON_TYPES:\n      state.pokemonViews.all = GetPokemonType(payload, GetPokemonOrigin(state.pokemonOrigin, state.pokemons));\n      return { ...state,\n        pokemonViews: { ...state.pokemonViews,\n          now: GetPokemonsViews(state.pokemonViews.all)\n        },\n        pokemonFilter: payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/dario/Desktop/PI-Pokemon-FT12-master/PI-Pokemon-FT12-master/client/src/reducer/index.js"],"names":["ADDPOKEMON","GETCREATE","GETDETAILS","GETNAME","GETPOKEMONS","GETTYPES","POKEMONS_ORDER","POKEMONS_ORIGIN","POKEMON_TYPES","initialState","pokemonDetails","pokemonName","loading","pokemonHome","types","pokemonCreate","pokemonFilter","CreateFilter","rootReducer","state","action","type","payload","pokemonViews","now","GetPokemonsViews","GetPokemonOrder","all","GetPokemonOrigin","pokemons","pokemonOrigin","GetPokemonType"],"mappings":"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","sourcesContent":["import { ADDPOKEMON } from \"../actions/index\";\r\nimport { GETCREATE } from \"../actions/index\";\r\nimport { GETDETAILS } from \"../actions/index\";\r\nimport { GETNAME } from \"../actions/index\";\r\nimport { GETPOKEMONS } from \"../actions/index\";\r\nimport { GETTYPES } from \"../actions/index\";\r\nimport { POKEMONS_ORDER, POKEMONS_ORIGIN, POKEMON_TYPES } from '../actions/index'\r\n\r\nconst initialState = {\r\n    pokemonDetails: [],\r\n    pokemonName: [],\r\n    loading: false,\r\n    pokemonHome: [],\r\n    types: [],\r\n    pokemonCreate: [],\r\n    pokemonFilter: [],\r\n    CreateFilter: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GETPOKEMONS:\r\n            return {\r\n                ...state,\r\n                pokemonHome: action.payload,\r\n            };\r\n\r\n        case GETDETAILS:\r\n            return {\r\n                ...state,\r\n                pokemonDetails: action.payload,\r\n                loading: false,\r\n            };\r\n\r\n        case GETTYPES:\r\n            return {\r\n                ...state,\r\n                types: action.payload,\r\n            };\r\n\r\n        case GETNAME:\r\n            return {\r\n                ...state,\r\n                pokemonHome: action.payload,\r\n                loading: true,\r\n            };\r\n        case GETCREATE:\r\n            return {\r\n                ...state,\r\n                pokemonCreate: action.payload,\r\n            };\r\n        case ADDPOKEMON:\r\n            return {\r\n                ...state,\r\n            };\r\n        case POKEMONS_ORDER:\r\n            return {\r\n                ...state,\r\n                pokemonViews: {\r\n                    ...state.pokemonViews,\r\n                    now: GetPokemonsViews(\r\n                        GetPokemonOrder(payload, state.pokemonViews.all)\r\n                    ),\r\n                },\r\n                pokemonFilter: payload,\r\n            };\r\n        case POKEMONS_ORIGIN:\r\n            return {\r\n                ...state,\r\n                pokemonViews: {\r\n                    ...state.pokemonViews,\r\n                    now: GetPokemonsViews(GetPokemonOrigin(payload, state.pokemons)),\r\n                    all: GetPokemonOrigin(payload, state.pokemons),\r\n                },\r\n\r\n                pokemonOrigin: payload, /// API\r\n                pokemonFilter: payload,\r\n            };\r\n        case POKEMON_TYPES:\r\n            state.pokemonViews.all = GetPokemonType(\r\n                payload,\r\n                GetPokemonOrigin(state.pokemonOrigin, state.pokemons)\r\n            );\r\n            return {\r\n                ...state,\r\n                pokemonViews: {\r\n                    ...state.pokemonViews,\r\n                    now: GetPokemonsViews(state.pokemonViews.all),\r\n                },\r\n                pokemonFilter: payload,\r\n            };\r\n\r\n        default:\r\n            return {...state };\r\n    }\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dario\\\\Desktop\\\\PI-Pokemon-FT12-master\\\\PI-Pokemon-FT12-master\\\\client\\\\src\\\\components\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport '../Home/Home.css';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getPokemons } from '../../actions/index';\nimport Navbar from '../Nav/NavBar';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home({\n  getPokemons,\n  state\n}) {\n  _s();\n\n  const [pokemons, setPokemons] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(12);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get('http://localhost:3002/pokemons');\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n    console.log(\"fetchpost\" + posts);\n  }, []); // Get current posts\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  useEffect(() => {\n    getPokemons();\n  }, []);\n  useEffect(() => {\n    setPokemons(state);\n    console.log(pokemons);\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-pokes\",\n    children: pokemons && pokemons.map(p => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poke\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/pokemons/${p.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: p.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: p.sprite,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), p && p.Types.map(type => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tipos\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: type.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)\n          }, type.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this);\n        })]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"O7AtGsUhPz0qFGn912cXvVIkl5M=\");\n\n_c = Home;\n\nconst feliToProps = state => {\n  return {\n    state: state.pokemonHome\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPokemons: () => dispatch(getPokemons())\n  };\n};\n\nexport default connect(feliToProps, mapDispatchToProps)(Home); //=========================================//\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/dario/Desktop/PI-Pokemon-FT12-master/PI-Pokemon-FT12-master/client/src/components/Home/Home.jsx"],"names":["React","useEffect","useState","connect","getPokemons","Navbar","axios","Link","Home","state","pokemons","setPokemons","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","fetchPosts","res","get","data","console","log","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","map","p","id","name","sprite","Types","type","feliToProps","pokemonHome","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA2C,OAA3C;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,SAASC,IAAT,CAAc;AAACJ,EAAAA,WAAD;AAAaK,EAAAA;AAAb,CAAd,EAAmC;AAAA;;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACgB,YAAD,IAAiBhB,QAAQ,CAAC,EAAD,CAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,UAAU,GAAG,YAAY;AAC7BJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMK,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,gCAAV,CAAlB;AACAR,MAAAA,QAAQ,CAACO,GAAG,CAACE,IAAL,CAAR;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD;;AAOAI,IAAAA,UAAU;AACVI,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAaZ,KAAzB;AACD,GAVQ,EAUP,EAVO,CAAT,CAPiC,CAkBhC;;AACA,QAAMa,eAAe,GAAGT,WAAW,GAAGE,YAAtC;AACA,QAAMQ,gBAAgB,GAAGD,eAAe,GAAGP,YAA3C;AACA,QAAMS,YAAY,GAAGf,KAAK,CAACgB,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB,CArBgC,CAuBhC;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIb,cAAc,CAACa,UAAD,CAA7C;;AAGD7B,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,WAAW;AACZ,GAFQ,EAEP,EAFO,CAAT;AAGAH,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW,CAACF,KAAD,CAAX;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACD,GAHQ,EAGP,CAACD,KAAD,CAHO,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cAEIC,QAAQ,IAAIA,QAAQ,CAACqB,GAAT,CAAaC,CAAC,IAAI;AAC5B,0BAEE;AAAK,QAAA,SAAS,EAAG,MAAjB;AAAA,gCACA,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,aAAYA,CAAC,CAACC,EAAG,EAA5B;AAAA,iCACE;AAAA,sBAAKD,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADA,eAIE;AAAK,UAAA,GAAG,EAAEF,CAAC,CAACG,MAAZ;AAAoB,UAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAJF,EAMIH,CAAC,IAAIA,CAAC,CAACI,KAAF,CAAQL,GAAR,CAAYM,IAAI,IAAI;AACvB,8BACE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACA;AAAA,wBAAIA,IAAI,CAACH;AAAT;AAAA;AAAA;AAAA;AAAA;AADA,aAA4BG,IAAI,CAACH,IAAjC;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANI,CANT;AAAA,SAA6BF,CAAC,CAACC,EAA/B;AAAA;AAAA;AAAA;AAAA,cAFF;AAmBD,KApBW;AAFhB;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA/DQzB,I;;KAAAA,I;;AAgET,MAAM8B,WAAW,GAAI7B,KAAD,IAAW;AAC7B,SAAO;AACLA,IAAAA,KAAK,EAAEA,KAAK,CAAC8B;AADR,GAAP;AAGD,CAJD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAM;AACJrC,IAAAA,WAAW,EAAE,MAAMqC,QAAQ,CAACrC,WAAW,EAAZ;AADvB,GAAN;AAGD,CAJD;;AAMA,eAAeD,OAAO,CAACmC,WAAD,EAAaE,kBAAb,CAAP,CAAwChC,IAAxC,CAAf,C,CAEA","sourcesContent":["import '../Home/Home.css';\r\nimport React , { useEffect, useState} from 'react'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {getPokemons} from '../../actions/index'\r\nimport Navbar from '../Nav/NavBar'\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Home({getPokemons,state}) {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(12);\r\n  \r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await axios.get('http://localhost:3002/pokemons');\r\n      setPosts(res.data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchPosts();\r\n    console.log(\"fetchpost\"+ posts)\r\n  },[])\r\n   // Get current posts\r\n   const indexOfLastPost = currentPage * postsPerPage;\r\n   const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n   const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n \r\n   // Change page\r\n   const paginate = pageNumber => setCurrentPage(pageNumber);\r\n  \r\n  \r\n  useEffect(()=>{\r\n    getPokemons()\r\n  },[])\r\n  useEffect(() => {\r\n    setPokemons(state)\r\n    console.log(pokemons)\r\n  },[state])\r\n\r\n  return (\r\n    <div className=\"container-pokes\">\r\n      {\r\n        pokemons && pokemons.map(p => {\r\n          return (\r\n            \r\n            <div className = \"poke\" key={p.id}>\r\n            <Link to={`/pokemons/${p.id}`}>\r\n              <h4>{p.name}</h4>\r\n            </Link>\r\n              <img src={p.sprite} alt=\"\" />\r\n              {\r\n                p && p.Types.map(type => {\r\n                  return(\r\n                    <div className=\"tipos\" key={type.name}>\r\n                    <p>{type.name}</p>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n            \r\n          )\r\n        })\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}\r\nconst feliToProps = (state) => {\r\n  return {\r\n    state: state.pokemonHome\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    getPokemons: () => dispatch(getPokemons())\r\n  }\r\n}\r\n\r\nexport default connect(feliToProps,mapDispatchToProps)(Home);\r\n\r\n//=========================================//\r\n\r\n"]},"metadata":{},"sourceType":"module"}